package cairof

// #cgo pkg-config: cairo cairo-gobject
// #include <stdlib.h>
// #include <cairo.h>
// #include <cairo-gobject.h>
import "C"
import (
	"unsafe"

	"github.com/gotk3/gotk3/cairo"
)

func init() {
	cairo.SURFACE_TYPE_IMAGE = C.CAIRO_SURFACE_TYPE_IMAGE
	cairo.SURFACE_TYPE_PDF = C.CAIRO_SURFACE_TYPE_PDF
	cairo.SURFACE_TYPE_PS = C.CAIRO_SURFACE_TYPE_PS
	cairo.SURFACE_TYPE_XLIB = C.CAIRO_SURFACE_TYPE_XLIB
	cairo.SURFACE_TYPE_XCB = C.CAIRO_SURFACE_TYPE_XCB
	cairo.SURFACE_TYPE_GLITZ = C.CAIRO_SURFACE_TYPE_GLITZ
	cairo.SURFACE_TYPE_QUARTZ = C.CAIRO_SURFACE_TYPE_QUARTZ
	cairo.SURFACE_TYPE_WIN32 = C.CAIRO_SURFACE_TYPE_WIN32
	cairo.SURFACE_TYPE_BEOS = C.CAIRO_SURFACE_TYPE_BEOS
	cairo.SURFACE_TYPE_DIRECTFB = C.CAIRO_SURFACE_TYPE_DIRECTFB
	cairo.SURFACE_TYPE_SVG = C.CAIRO_SURFACE_TYPE_SVG
	cairo.SURFACE_TYPE_OS2 = C.CAIRO_SURFACE_TYPE_OS2
	cairo.SURFACE_TYPE_WIN32_PRINTING = C.CAIRO_SURFACE_TYPE_WIN32_PRINTING
	cairo.SURFACE_TYPE_QUARTZ_IMAGE = C.CAIRO_SURFACE_TYPE_QUARTZ_IMAGE
	cairo.SURFACE_TYPE_SCRIPT = C.CAIRO_SURFACE_TYPE_SCRIPT
	cairo.SURFACE_TYPE_QT = C.CAIRO_SURFACE_TYPE_QT
	cairo.SURFACE_TYPE_RECORDING = C.CAIRO_SURFACE_TYPE_RECORDING
	cairo.SURFACE_TYPE_VG = C.CAIRO_SURFACE_TYPE_VG
	cairo.SURFACE_TYPE_GL = C.CAIRO_SURFACE_TYPE_GL
	cairo.SURFACE_TYPE_DRM = C.CAIRO_SURFACE_TYPE_DRM
	cairo.SURFACE_TYPE_TEE = C.CAIRO_SURFACE_TYPE_TEE
	cairo.SURFACE_TYPE_XML = C.CAIRO_SURFACE_TYPE_XML
	cairo.SURFACE_TYPE_SKIA = C.CAIRO_SURFACE_TYPE_SKIA
	cairo.SURFACE_TYPE_SUBSURFACE = C.CAIRO_SURFACE_TYPE_SUBSURFACE
}

func marshalSurfaceType(p uintptr) (interface{}, error) {
	c := C.g_value_get_enum((*C.GValue)(unsafe.Pointer(p)))
	return cairo.SurfaceType(c), nil
}
